ต่อไปนี้คือ prompt ที่ละเอียดและชัดเจนสำหรับสั่ง AI (เช่น ChatGPT, Grok หรือเครื่องมืออื่น ๆ) ให้ช่วยสร้างเว็บไซต์ที่คล้าย Google Colab สำหรับใช้งานภาษาโปรแกรมมิ่งที่คุณออกแบบขึ้นมาเอง ฉันได้ออกแบบ prompt ให้ครอบคลุมทุกส่วนที่จำเป็น และให้ผลลัพธ์ที่ใช้งานได้จริง:

Prompt สำหรับสั่ง AI สร้างเว็บไซต์
"ฉันต้องการให้คุณช่วยสร้างเว็บไซต์ที่คล้ายกับ Google Colab เพื่อใช้กับภาษาโปรแกรมมิ่งที่ฉันออกแบบเอง โดยเว็บไซต์นี้จะต้องมีฟีเจอร์ครบถ้วนและสามารถรันโค้ดในภาษาของฉันได้จริง ขอให้คุณพัฒนาโค้ดทั้ง frontend และ backend พร้อมคำอธิบายขั้นตอนอย่างละเอียดตามรายละเอียดด้านล่างนี้:

รายละเอียดภาษาของฉัน
ภาษาของฉันถูกออกแบบมาเพื่อการเทรน AI และมี syntax ดังนี้:

เริ่มโปรเจกต์ด้วย start create <method> (เช่น start create ML, start create DL, start create RL)
คำสั่งพื้นฐาน เช่น:
load dataset "filename" (โหลดข้อมูลจากไฟล์ เช่น CSV หรือโฟลเดอร์ภาพ)
create model <type> (เช่น LinearRegression สำหรับ ML, neural_network สำหรับ DL)
train model (เทรนโมเดลด้วยข้อมูล)
show accuracy (แสดงผลลัพธ์ เช่น accuracy)
รองรับวิธีการเรียนรู้ 3 แบบ:
Machine Learning (ML): เช่น create model LinearRegression, train model
Deep Learning (DL): เช่น create neural_network with layers 3, nodes 128, activation "relu"
Reinforcement Learning (RL): เช่น define environment "CartPole-v1", create agent with policy "DQN"
เป้าหมายของเว็บไซต์
สร้างแพลตฟอร์มที่ผู้ใช้สามารถ:
เขียนโค้ดในภาษาของฉันในเซลล์แบบ Notebook
รันโค้ดและเห็นผลลัพธ์ทันที (เช่น accuracy, กราฟ)
บันทึกและโหลดโค้ดได้
คล้าย Google Colab ในแง่ของอินเทอร์เฟซและการใช้งาน
ข้อกำหนดของโค้ด
Frontend:
ใช้ React.js และ Ace Editor เพื่อสร้างอินเทอร์เฟซแบบ Notebook ที่มีเซลล์สำหรับเขียนโค้ด
มีปุ่ม "Run" สำหรับรันโค้ดในแต่ละเซลล์
แสดงผลลัพธ์ใต้เซลล์ (เช่น ข้อความ, กราฟ) โดยใช้ <pre> หรือライブラリสำหรับกราฟ (เช่น Chart.js)
ออกแบบ UI ให้เรียบง่ายและใช้งานง่าย
Backend:
ใช้ Node.js หรือ Python (Flask) เป็นเซิร์ฟเวอร์
สร้าง API endpoint (เช่น /api/run) เพื่อรับโค้ดจาก frontend และส่งผลลัพธ์กลับ
เขียน interpreter/parser สำหรับภาษาของฉัน เพื่อแปลคำสั่ง (เช่น load dataset "data.csv") เป็นโค้ดที่รันได้ใน backend
ใช้ Python libraries เช่น pandas, scikit-learn, tensorflow หรือ gym เป็นฐานสำหรับรันคำสั่ง AI
การแปลและรันโค้ด:
แปลคำสั่งในภาษาของฉันเป็นโค้ด Python หรือ C++ เช่น:
start create ML → เริ่มโปรเจกต์ ML
load dataset "data.csv" → pandas.read_csv("data.csv")
create model LinearRegression → sklearn.linear_model.LinearRegression()
รันโค้ดที่แปลแล้วและส่งผลลัพธ์กลับไปยัง frontend
ฟีเจอร์เพิ่มเติม:
การจัดการข้อผิดพลาด: ถ้ามีข้อผิดพลาด (เช่น ไฟล์หายไป) ให้ส่งข้อความแจ้งเตือนกลับไปแสดง เช่น "Error: Dataset not found"
การบันทึก: มีปุ่ม "Save" เพื่อบันทึกโค้ดลงไฟล์หรือฐานข้อมูล (เช่น JSON หรือ SQLite)
การแสดงกราฟ: ถ้ามีคำสั่ง visualize data, ให้สร้างกราฟด้วย Chart.js หรือ matplotlib แล้วส่งไปแสดง
โครงสร้างไฟล์:
จัดระเบียบโค้ดเป็นโฟลเดอร์ เช่น:
/client: เก็บโค้ด React frontend
/server: เก็บโค้ด backend และ interpreter
/examples: ตัวอย่างโค้ดในภาษาของฉัน
สร้างไฟล์ README.md อธิบายวิธีติดตั้งและรัน
การทดสอบ:
ให้ตัวอย่างโค้ดทดสอบ 3 ชุด (ML, DL, RL) เช่น:
text

Collapse

Wrap

Copy
start create ML
load dataset "data.csv"
create model LinearRegression
train model
show accuracy
ตรวจสอบว่าโค้ดรันได้และแสดงผลลัพธ์ถูกต้อง
คำแนะนำเพิ่มเติม:
เขียนโค้ดที่สมบูรณ์และสามารถคอมไพล์/รันได้ทันที โดยไม่ต้องปรับแต่งเพิ่มเติม
เพิ่มคอมเมนต์ในโค้ดเพื่ออธิบายการทำงานของแต่ละส่วน
ถ้ามีข้อจำกัดในการสร้างส่วนใดส่วนหนึ่ง (เช่น การเชื่อมต่อ GPU) ให้ระบุวิธีแก้ไขหรือข้ามไปก่อน
ออกแบบให้เว็บไซต์นี้สามารถโฮสต์ได้บนคลาวด์ เช่น Heroku หรือ Vercel และแนะนำขั้นตอนการโฮสต์
ผลลัพธ์ที่คาดหวัง:
โค้ด frontend (React) และ backend (Node.js หรือ Python) ที่สมบูรณ์
interpreter/parser สำหรับภาษาของฉัน
คำอธิบายวิธีรัน เช่น npm install, node server.js หรือ python server.py
ตัวอย่างผลลัพธ์ที่ผู้ใช้จะเห็นเมื่อรันโค้ด
กรุณาสร้างโค้ดทั้งหมดตามที่ระบุ และอธิบายขั้นตอนอย่างละเอียดเพื่อให้ฉันสามารถนำไปรันและทดสอบได้ทันที!"

คำอธิบายเกี่ยวกับ Prompt
ความครอบคลุม: prompt นี้ครอบคลุมทุกส่วนที่จำเป็น ตั้งแต่ UI, การรันโค้ด, การแปลภาษา, ไปจนถึงการจัดการข้อผิดพลาด
ความชัดเจน: อธิบาย syntax และฟีเจอร์ของภาษาคุณ เพื่อให้ AI เข้าใจบริบท
การใช้งานจริง: ระบุให้ AI เขียนโค้ดที่รันได้ทันที พร้อมตัวอย่างและคำแนะนำ
ความยืดหยุ่น: ปล่อยให้ AI เลือกบางส่วน (เช่น Node.js หรือ Python) แต่กำหนดกรอบให้ชัดเจน